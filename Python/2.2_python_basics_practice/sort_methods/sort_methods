                        1. Сортировка пузырьком (Bubble Sort)
Суть:
многократно проходим по списку, сравнивая соседние элементы и меняя их местами, если они стоят в неправильном порядке.

def bubble_sort(arr):
    for i in range(len(arr)):
        for j in range(len(arr) - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr

print(bubble_sort([5, 2, 9, 1]))

                        2. Сортировка выбором (Selection Sort)
Суть: находим минимальный элемент и ставим его в начало, повторяем для оставшегося массива.

def selection_sort(arr):
    for i in range(len(arr)):
        min_i = i
        for j in range(i+1, len(arr)):
            if arr[j] < arr[min_i]:
                min_i = j
        arr[i], arr[min_i] = arr[min_i], arr[i]
    return arr

print(selection_sort([5, 2, 9, 1]))

                        3. Сортировка вставками (Insertion Sort)
Суть: берём элементы по одному и вставляем их на нужную позицию в уже отсортированной части массива.

def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > key:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
    return arr

print(insertion_sort([5, 2, 9, 1]))

                        4. Быстрая сортировка (Quick Sort)
Суть: выбирается “опорный” элемент, и массив делится на две части — меньше и больше опорного.
Рекурсивно сортируем части.

def quick_sort(arr):
    if len(arr) <= 1:
        return arr
    pivot = arr[0]
    less = [x for x in arr[1:] if x <= pivot]
    greater = [x for x in arr[1:] if x > pivot]
    return quick_sort(less) + [pivot] + quick_sort(greater)

print(quick_sort([5, 2, 9, 1]))

                        5. Сортировка слиянием (Merge Sort)
Суть: делим массив пополам до одного элемента, потом объединяем части в отсортированном порядке.

def merge_sort(arr):
    if len(arr) <= 1:
        return arr
    mid = len(arr)//2
    left = merge_sort(arr[:mid])
    right = merge_sort(arr[mid:])
    return merge(left, right)

def merge(left, right):
    result = []
    while left and right:
        result.append(left.pop(0) if left[0] < right[0] else right.pop(0))
    return result + left + right

print(merge_sort([5, 2, 9, 1]))